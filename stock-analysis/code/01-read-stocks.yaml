kind: remote
metadata:
  name: read-stocks
  tag: ''
  hash: 5a27499f45ba73b443dfc2067b9fad416634462e
  project: default
spec:
  command: ''
  args: []
  image: ''
  entry_points:
    contruct_dataframe:
      name: contruct_dataframe
      doc: ''
      parameters:
      - name: all_records
        default: ''
      outputs:
      - default: ''
      lineno: 11
    update_tickers:
      name: update_tickers
      doc: ''
      parameters:
      - name: context
        default: ''
      - name: perdiod
        default: ''
      - name: interval
        default: ''
      outputs:
      - default: ''
      lineno: 16
    init_context:
      name: init_context
      doc: ''
      parameters:
      - name: context
        default: ''
      outputs:
      - default: ''
      lineno: 58
    handler:
      name: handler
      doc: ''
      parameters:
      - name: context
        default: ''
      - name: event
        default: ''
      outputs:
      - default: ''
      lineno: 92
  description: ''
  min_replicas: 1
  max_replicas: 4
  env: []
  base_spec:
    apiVersion: nuclio.io/v1
    kind: Function
    metadata:
      annotations:
        nuclio.io/generated_by: function generated from /User/test/demos/stock-analysis/code/01-read-stocks.ipynb
      labels: {}
      name: read-stocks
    spec:
      build:
        baseImage: mlrun/ml-models
        commands:
        - pip install lxml
        - pip install yfinance
        - pip install requests
        - pip install v3io_frames
        functionSourceCode: IyBHZW5lcmF0ZWQgYnkgbnVjbGlvLmV4cG9ydC5OdWNsaW9FeHBvcnRlcgoKaW1wb3J0IHlmaW5hbmNlIGFzIHlmCmltcG9ydCBvcwppbXBvcnQgcGFuZGFzIGFzIHBkCmltcG9ydCB2M2lvX2ZyYW1lcyBhcyB2M2YKaW1wb3J0IGFzdAppbXBvcnQgbWxydW4uZmVhdHVyZV9zdG9yZSBhcyBmcwppbXBvcnQgbWxydW4KCmRlZiBjb250cnVjdF9kYXRhZnJhbWUoYWxsX3JlY29yZHMpOgogICAgdGVtcF9kZiA9IHBkLkRhdGFGcmFtZShhbGxfcmVjb3JkcykKICAgIHRlbXBfZGYubGFzdF91cGRhdGVkID0gdGVtcF9kZi5sYXN0X3VwZGF0ZWQuYXN0eXBlKCJzdHIiKQogICAgcmV0dXJuIHRlbXBfZGYKCmRlZiB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCBwZXJkaW9kLCBpbnRlcnZhbCk6CiAgICBhbGxfcmVjb3Jkcz1bXSAjIHN0b2Nrcz1bXTsgdGltZXM9W107IHZvbHVtZXM9W107IHByaWNlcz1bXTsgCiAgICBzdG9ja3NfZGYgPSBwZC5EYXRhRnJhbWUoKQogICAgZm9yIHN5bSBpbiBjb250ZXh0LnN0b2NrX3N5bXM6CiAgICAgICAgaGlzdCA9IHlmLlRpY2tlcihzeW0pLmhpc3RvcnkocGVyaW9kPXBlcmRpb2QsIGludGVydmFsPScxbScpCiAgICAgICAgdGltZSA9IGhpc3QuaW5kZXhbbGVuKGhpc3QpIC0gMV0KICAgICAgICByZWNvcmQgPSBoaXN0LmxvY1t0aW1lXQogICAgICAgIGxhc3QgPSBjb250ZXh0Lmxhc3RfdHJhZGVfdGltZXMuZ2V0KHN5bSkKICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnUmVjZWl2ZWQge3N5bX0gZGF0YSBmcm9tIHlmaW5hbmNlLCBpbmNsdWRpbmcge2xlbihoaXN0KX0gY2FuZGxlcyBlbmRpbmcgYXQge2xhc3R9JykKCiAgICAgICAgCiAgICAgICAgaWYgbm90IGxhc3Qgb3IgdGltZSA+IGxhc3Q6CiAgICAgICAgICAgIAogICAgICAgICAgICBzdG9jayA9IHsnc3ltYm9sJzogc3ltLCAncHJpY2UnOiByZWNvcmRbJ0Nsb3NlJ10sICd2b2x1bWUnOiByZWNvcmRbJ1ZvbHVtZSddLCAnbGFzdF91cGRhdGVkJzogdGltZX0KICAgICAgICAgICAgYWxsX3JlY29yZHMuYXBwZW5kKHN0b2NrKQogICAgICAgICAgICBleHByID0gY29udGV4dC5leHByX3RlbXBsYXRlLmZvcm1hdCgqKnN0b2NrKQogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd1cGRhdGUgZXhwcmVzc2lvbicsIHN5bWJvbD1zeW0sIGV4cHI9ZXhwcikKICAgICAgICAgICAgY29udGV4dC52M2MuZXhlY3V0ZSgna3YnLCBjb250ZXh0LnN0b2Nrc19rdl90YWJsZSwgJ3VwZGF0ZScsIGFyZ3M9eydrZXknOiBzeW0sICdleHByZXNzaW9uJzogZXhwcn0pCiAgICAgICAgIAogICAgICAgICAgICBjb250ZXh0LmxvZ2dlci5pbmZvKGYnVXBkYXRlZCByZWNvcmRzIGZyb20ge2xhc3R9IHRvIHt0aW1lfScpCiAgICAgICAgICAgIGNvbnRleHQubGFzdF90cmFkZV90aW1lc1tzeW1dID0gdGltZQogICAgICAgICAgICBoaXN0WydzeW1ib2wnXSA9IHN5bQogICAgICAgICAgICBoaXN0ID0gaGlzdC5yZXNldF9pbmRleCgpCiAgICAgICAgICAgIGhpc3QgPSBoaXN0LnNldF9pbmRleChbJ0RhdGV0aW1lJywgJ3N5bWJvbCddKQogICAgICAgICAgICBoaXN0ID0gaGlzdC5sb2NbOiwgWydDbG9zZScsICdWb2x1bWUnXV0KICAgICAgICAgICAgaGlzdCA9IGhpc3QucmVuYW1lKGNvbHVtbnM9eydDbG9zZSc6ICdwcmljZScsICdWb2x1bWUnOiAndm9sdW1lJ30pCiAgICAgICAgICAgIHN0b2Nrc19kZiA9IHN0b2Nrc19kZi5hcHBlbmQoaGlzdCkKICAgICAgICAgICAgY29udGV4dC5sb2dnZXIuaW5mbyhmJ0FkZGVkIHJlY29yZHMge2hpc3Quc2hhcGVbMF19IHJlY29yZHMgZm9yIHtzeW19IHRvIGhpc3RvcnknKQogICAgICAgIGVsc2U6CiAgICAgICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZidObyB1cGRhdGUgd2FzIG1hZGUsIGN1cnJlbnQgVFM6IHtsYXN0fSB2cy4gbmV3IGRhdGEge3RpbWV9JykKICAgIAogICAgaWYobGVuKGFsbF9yZWNvcmRzKSAhPSAwKToKICAgICAgICBzdG9ja19pbmZvID0gY29udHJ1Y3RfZGF0YWZyYW1lKGFsbF9yZWNvcmRzKQogICAgICAgIGNvbnRleHQubG9nZ2VyLmluZm8oZiJXcml0aW5nIG5ldyBkYXRhZnJhbWUgd2l0aCBzaGFwZSB7c3RvY2tfaW5mby5zaGFwZX0gdG8gZmVhdHVyZSBzdG9yZSIpCiAgICAgICAgZnMuaW5nZXN0KGNvbnRleHQuc3RvY2tfaW5mb19mZWF0dXJlX3NldCwgc3RvY2tfaW5mbywgaW5mZXJfb3B0aW9ucz1mcy5JbmZlck9wdGlvbnMuZGVmYXVsdCgpKQogICAgICAgIAogICAgaWYgc3RvY2tzX2RmLnNoYXBlWzBdPjA6CiAgICAgICAgc3RvY2tzX2RmID0gc3RvY2tzX2RmLnNvcnRfaW5kZXgobGV2ZWw9MCkKICAgICAgICBjb250ZXh0LmxvZ2dlci5kZWJ1Z193aXRoKCd3cml0aW5nIGRhdGEgdG8gVFNEQicsIHN0b2Nrcz1zdG9ja3NfZGYpCiAgICAgICAgc3RvY2tzX2RmLnRvX2NzdignaGlzdG9yeS5jc3YnKQogICAgICAgIGNvbnRleHQudjNjLndyaXRlKGJhY2tlbmQ9J3RzZGInLCB0YWJsZT1jb250ZXh0LnN0b2Nrc190c2RiX3RhYmxlLCBkZnM9c3RvY2tzX2RmKQoKZGVmIGluaXRfY29udGV4dChjb250ZXh0KToKICAgIGNvbnRleHQubG9nZ2VyLmluZm8oImluaXQgc3RvY2tzIHJlYWRlciBjb250ZXh0IikKICAgIHNldGF0dHIoY29udGV4dCwgJ1BST0pFQ1RfTkFNRScsIG9zLmdldGVudignUFJPSkVDVF9OQU1FJywgJ3N0b2Nrcy10ZXN0JyArIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpKSkKICAgIG1scnVuLnNldF9lbnZpcm9ubWVudChwcm9qZWN0ID0gY29udGV4dC5QUk9KRUNUX05BTUUpCiAgICBjbGllbnQgPSB2M2YuQ2xpZW50KCdmcmFtZXNkOjgwODEnLGNvbnRhaW5lcj1vcy5nZXRlbnYoJ1YzSU9fQ09OVEFJTkVSJywgJ3VzZXJzJyksKQogICAgc2V0YXR0cihjb250ZXh0LCAndjNjJywgY2xpZW50KQogICAgCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdG9ja3Nfa3ZfdGFibGUnLCBvcy5nZXRlbnYoJ1NUT0NLU19LVl9UQUJMRScsIG9zLmdldGVudignVjNJT19VU0VSTkFNRScpICsgJy9zdG9ja3Mvc3RvY2tzX2t2JykpCiAgICBzZXRhdHRyKGNvbnRleHQsICdzdG9ja3NfdHNkYl90YWJsZScsIG9zLmdldGVudignU1RPQ0tTX1RTREJfVEFCTEUnLCBvcy5nZXRlbnYoJ1YzSU9fVVNFUk5BTUUnKSArICcvc3RvY2tzL3N0b2Nrc190c2RiJykpCiAgICBjb250ZXh0LnYzYy5jcmVhdGUoYmFja2VuZD0ndHNkYicsIHRhYmxlPWNvbnRleHQuc3RvY2tzX3RzZGJfdGFibGUsIHJhdGU9JzEvbScsIGlmX2V4aXN0cz0xKQogICAgCiAgICBzdG9ja3NfaW5mb19zZXQgPSBmcy5GZWF0dXJlU2V0KCJzdG9ja3MiLCBlbnRpdGllcz1bZnMuRW50aXR5KCJzeW1ib2wiKV0pCiAgICBzZXRhdHRyKGNvbnRleHQsJ3N0b2NrX2luZm9fZmVhdHVyZV9zZXQnLHN0b2Nrc19pbmZvX3NldCkKICAgIAogICAgY29udGV4dC5zdG9ja19pbmZvX2ZlYXR1cmVfc2V0LmFkZF9hZ2dyZWdhdGlvbigicHJpY2VzIiwicHJpY2UiLFsibWluIiwibWF4Il0sWyIxaCJdLCIxMG0iKQogICAgY29udGV4dC5zdG9ja19pbmZvX2ZlYXR1cmVfc2V0LmFkZF9hZ2dyZWdhdGlvbigidm9sdW1lcyIsInZvbHVtZSIsWyJtaW4iLCJtYXgiXSxbIjFoIl0sIjEwbSIpCiAgICAKICAgIHN0b2NrcyA9IG9zLmdldGVudignU1RPQ0tfTElTVCcsJ0dPT0dMLE1TRlQsQU1aTixBQVBMLElOVEMnKQogICAgaWYgc3RvY2tzLnN0YXJ0c3dpdGgoJ1snKToKICAgICAgICBzdG9ja19zeW1zID0gYXN0LmxpdGVyYWxfZXZhbChzdG9ja3MpCiAgICBlbHNlOiAKICAgICAgICBzdG9ja19zeW1zID0gc3RvY2tzLnNwbGl0KCcsJykKICAgIHNldGF0dHIoY29udGV4dCwgJ3N0b2NrX3N5bXMnLCBzdG9ja19zeW1zKQogICAgCgogICAgZXhwcl90ZW1wbGF0ZSA9IG9zLmdldGVudignRVhQUkVTU0lPTl9URU1QTEFURScsICJzeW1ib2w9J3tzeW1ib2x9JztwcmljZT17cHJpY2V9O3ZvbHVtZT17dm9sdW1lfTtsYXN0X3VwZGF0ZWQ9J3tsYXN0X3VwZGF0ZWR9JyIpCiAgICBzZXRhdHRyKGNvbnRleHQsICdleHByX3RlbXBsYXRlJywgZXhwcl90ZW1wbGF0ZSkKCiAgICBsYXN0X3RyYWRlX3RpbWVzID0ge30KICAgIHNldGF0dHIoY29udGV4dCwgJ2xhc3RfdHJhZGVfdGltZXMnLCBsYXN0X3RyYWRlX3RpbWVzKQogICAgCiAgICB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCAnN2QnLCAnMW0nKQogICAgCgpkZWYgaGFuZGxlcihjb250ZXh0LCBldmVudCk6CiAgICB1cGRhdGVfdGlja2Vycyhjb250ZXh0LCAnNW0nLCAnMW0nKQogICAgcmV0dXJuICdkb25lJwoK
        noBaseImagesPull: true
      env:
      - name: V3IO_ACCESS_KEY
        value: 39b1c8bc-741e-4591-abdd-0fe5626fac5e
      - name: V3IO_USERNAME
        value: dani
      - name: V3IO_API
        value: v3io-webapi.default-tenant.svc:8081
      handler: 01-read-stocks:handler
      runtime: python:3.6
      volumes: []
  source: ''
  build:
    commands: []
    code_origin: https://github.com/daniels290813/demos.git#0540c5e7f472f955713781018ef9977033666e02:read-stocks.ipynb
  default_handler: handler
verbose: false
