kind: remote
metadata:
  name: read-news
  tag: ''
  hash: 0c1cc50be50809d322ee0caa829008aee0ffbb68
  project: stocks-test-dani
spec:
  command: ''
  args: []
  image: ''
  entry_points:
    get_stock_news_page:
      name: get_stock_news_page
      doc: ''
      parameters:
      - name: stock_string
        default: ''
      outputs:
      - default: ''
      lineno: 15
    get_internal_article_links:
      name: get_internal_article_links
      doc: ''
      parameters:
      - name: page
        default: ''
      outputs:
      - default: ''
      lineno: 20
    get_article_page:
      name: get_article_page
      doc: ''
      parameters:
      - name: article_link
        default: ''
      outputs:
      - default: ''
      lineno: 25
    clean_paragraph:
      name: clean_paragraph
      doc: ''
      parameters:
      - name: paragraph
        default: ''
      outputs:
      - default: ''
      lineno: 30
    extract_text:
      name: extract_text
      doc: ''
      parameters:
      - name: article_page
        default: ''
      outputs:
      - default: ''
      lineno: 36
    get_publish_time:
      name: get_publish_time
      doc: ''
      parameters:
      - name: article
        default: ''
      outputs:
      - default: ''
      lineno: 44
    get_score:
      name: get_score
      doc: ''
      parameters:
      - name: paragraph_scores
        default: ''
      outputs:
      - default: ''
      lineno: 50
    get_article_scores:
      name: get_article_scores
      doc: ''
      parameters:
      - name: context
        default: ''
      - name: articles
        default: ''
      - name: endpoint
        default: ''
      outputs:
      - default: ''
      lineno: 53
    construct_dataframe:
      name: construct_dataframe
      doc: ''
      parameters:
      - name: sentiments
        default: ''
      - name: items
        default: ''
      - name: times
        default: ''
      outputs:
      - default: ''
      lineno: 62
    init_context:
      name: init_context
      doc: ''
      parameters:
      - name: context
        default: ''
      outputs:
      - default: ''
      lineno: 67
    handler:
      name: handler
      doc: ''
      parameters:
      - name: context
        default: ''
      - name: event
        default: ''
      outputs:
      - default: ''
      lineno: 95
  description: ''
  min_replicas: 1
  max_replicas: 4
  env: []
  base_spec:
    apiVersion: nuclio.io/v1
    kind: Function
    metadata:
      annotations:
        nuclio.io/generated_by: function generated from /User/test/demos/stock-analysis/code/02-read-news.ipynb
      labels: {}
      name: read-news
    spec:
      build:
        baseImage: mlrun/ml-models
        commands:
        - pip install beautifulsoup4
        - pip install pandas
        - pip install v3io_frames
        functionSourceCode: 
        noBaseImagesPull: true
      env:
      - name: V3IO_ACCESS_KEY
        value: 39b1c8bc-741e-4591-abdd-0fe5626fac5e
      - name: V3IO_USERNAME
        value: dani
      - name: V3IO_API
        value: v3io-webapi.default-tenant.svc:8081
      handler: 02-read-news:handler
      runtime: python:3.6
      volumes: []
  source: ''
  build:
    commands: []
    code_origin: https://github.com/daniels290813/demos.git#0540c5e7f472f955713781018ef9977033666e02:read-news.ipynb
  default_handler: handler
verbose: false
